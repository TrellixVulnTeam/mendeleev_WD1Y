{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions';\n\nfunction* fetchUser() {\n  try {\n    const login = yield axios.get('https://jsonplaceholder.typicode.com/todos/1');\n    yield put({\n      type: SET_LOGIN_DATA,\n      payload: login.data\n    });\n  } catch (e) {\n    yield console.log('Нет данных');\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser);\n}\n\nexport default mySaga;\n\nconst animalGetter = animal => new Promise((resolve, reject) => {\n  setTimeout(() => {\n    switch (animal) {\n      case '/dog':\n        resolve(['dog1', 'dog2', 'dog3']);\n        break;\n\n      case '/cat':\n        resolve(['cat1', 'cat2', 'cat3']);\n        break;\n\n      default:\n        reject(new Error(\"животные не найдены\"));\n    }\n  }, 3000);\n});\n\nanimalGetter('');","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/saga/saga.js"],"names":["put","takeEvery","axios","SET_PROFILE_DATA","SET_LOGIN_DATA","fetchUser","login","get","type","payload","data","e","console","log","mySaga","animalGetter","animal","Promise","resolve","reject","setTimeout","Error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,kBAAjD;;AAEA,UAAUC,SAAV,GAAsB;AAEpB,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMJ,KAAK,CACtBK,GADiB,CACb,8CADa,CAApB;AAEA,UAAMP,GAAG,CAAC;AAACQ,MAAAA,IAAI,EAAEJ,cAAP;AAAuBK,MAAAA,OAAO,EAAEH,KAAK,CAACI;AAAtC,KAAD,CAAT;AACD,GAJD,CAIE,OAAOC,CAAP,EAAU;AACV,UAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACF;;AAED,UAAUC,MAAV,GAAmB;AACjB,QAAMb,SAAS,CAACE,gBAAD,EAAmBE,SAAnB,CAAf;AACD;;AAED,eAAeS,MAAf;;AAEA,MAAMC,YAAY,GAAIC,MAAD,IAAY,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChEC,EAAAA,UAAU,CAAC,MAAM;AACf,YAAQJ,MAAR;AACE,WAAI,MAAJ;AAAYE,QAAAA,OAAO,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAD,CAAP;AACV;;AACF,WAAI,MAAJ;AAAYA,QAAAA,OAAO,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAD,CAAP;AACV;;AACF;AAASC,QAAAA,MAAM,CAAE,IAAIE,KAAJ,CAAU,qBAAV,CAAF,CAAN;AALX;AAOD,GARS,EAQP,IARO,CAAV;AASD,CAVgC,CAAjC;;AAYAN,YAAY,CAAC,EAAD,CAAZ","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects'\nimport axios from 'axios'\n\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions'\n\nfunction* fetchUser() {\n\n  try {\n    const login = yield axios\n      .get('https://jsonplaceholder.typicode.com/todos/1')\n    yield put({type: SET_LOGIN_DATA, payload: login.data})\n  } catch (e) {\n    yield console.log('Нет данных')\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser)\n}\n\nexport default mySaga\n\nconst animalGetter = (animal) => new Promise((resolve, reject) => {\n  setTimeout(() => {\n    switch (animal) {\n      case'/dog': resolve(['dog1', 'dog2', 'dog3']);\n        break;\n      case'/cat': resolve(['cat1', 'cat2', 'cat3']);\n        break;\n      default: reject( new Error(\"животные не найдены\"))\n    }\n  }, 3000)\n})\n\nanimalGetter('')"]},"metadata":{},"sourceType":"module"}