{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions';\n\nfunction* fetchUser() {\n  const p = new Promise((resolve, reject) => {\n    axios.get('https://jsonplaceholder.typicode.com/todos/1').then(r => resolve(r));\n  });\n  console.log(p);\n\n  const data = () => {\n    return axios.get('https://jsonplaceholder.typicode.com/todos/1').then(r => r.data);\n  };\n\n  try {\n    const login = data();\n    yield put({\n      type: SET_LOGIN_DATA,\n      payload: login\n    });\n  } catch (e) {\n    yield console.log('Нет данных');\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/saga/saga.js"],"names":["put","takeEvery","axios","SET_PROFILE_DATA","SET_LOGIN_DATA","fetchUser","p","Promise","resolve","reject","get","then","r","console","log","data","login","type","payload","e","mySaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,kBAAjD;;AAEA,UAAUC,SAAV,GAAsB;AACpB,QAAMC,CAAC,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACzCP,IAAAA,KAAK,CACFQ,GADH,CACO,8CADP,EAEGC,IAFH,CAEQC,CAAC,IAAIJ,OAAO,CAACI,CAAD,CAFpB;AAID,GALS,CAAV;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,CAAZ;;AACA,QAAMS,IAAI,GAAI,MAAM;AAClB,WACEb,KAAK,CACFQ,GADH,CACO,8CADP,EAEGC,IAFH,CAEQC,CAAC,IAAGA,CAAC,CAACG,IAFd,CADF;AAKD,GAND;;AAQA,MAAI;AACF,UAAMC,KAAK,GAAGD,IAAI,EAAlB;AACA,UAAMf,GAAG,CAAC;AAACiB,MAAAA,IAAI,EAAEb,cAAP;AAAuBc,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAAT;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACV,UAAMN,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACF;;AAED,UAAUM,MAAV,GAAmB;AACjB,QAAMnB,SAAS,CAACE,gBAAD,EAAmBE,SAAnB,CAAf;AACD;;AAED,eAAee,MAAf","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects'\nimport axios from 'axios'\n\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions'\n\nfunction* fetchUser() {\n  const p = new Promise((resolve, reject) => {\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos/1')\n      .then(r => resolve(r))\n    \n  })\n\n  console.log(p)\n  const data = (() => {\n    return (\n      axios\n        .get('https://jsonplaceholder.typicode.com/todos/1')\n        .then(r =>r.data)\n    )\n  })\n\n  try {\n    const login = data()\n    yield put({type: SET_LOGIN_DATA, payload: login})\n  } catch (e) {\n    yield console.log('Нет данных')\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser)\n}\n\nexport default mySaga"]},"metadata":{},"sourceType":"module"}