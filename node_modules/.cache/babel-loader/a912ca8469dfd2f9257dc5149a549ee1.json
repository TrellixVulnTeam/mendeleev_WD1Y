{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\component\\\\DeclinationDays\\\\DeclinationDays.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeclinationDays = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [days, setDays] = useState(0);\n  const [timeZone, setTimeZone] = useState(3);\n\n  const onTimeZone = e => {\n    setTimeZone(e.target.value);\n  };\n\n  const time = moment().utcOffset(timeZone * 60).format('DD.MM.YYYY HH:mm:ss');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setDays(parseInt(e.target.value, 10))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: t('counter.days', {\n        count: days\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: t('timeZone.chooseTimeZone')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: onTimeZone,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"+2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        selected: true,\n        value: \"3\",\n        children: \"+3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [t('timeZone.nowThisRegion'), \": \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeclinationDays, \"oeDOw4XCx8xOiDUBb8GFQXGrFwY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DeclinationDays;\nexport default DeclinationDays;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeclinationDays\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/component/DeclinationDays/DeclinationDays.tsx"],"names":["React","useState","moment","useTranslation","DeclinationDays","t","days","setDays","timeZone","setTimeZone","onTimeZone","e","target","value","time","utcOffset","format","parseInt","count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAQF,cAAc,EAA5B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMS,UAAU,GAAIC,CAAD,IAAW;AAC5BF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAGA,QAAMC,IAAI,GAAGZ,MAAM,GAAGa,SAAT,CAAmBP,QAAQ,GAAG,EAA9B,EAAkCQ,MAAlC,CAAyC,qBAAzC,CAAb;AACA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAGL,CAAD,IAAOJ,OAAO,CAACU,QAAQ,CAACN,CAAC,CAACC,MAAF,CAASC,KAAV,EAAiB,EAAjB,CAAT;AAA7C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIR,CAAC,CAAC,cAAD,EAAiB;AAACa,QAAAA,KAAK,EAAEZ;AAAR,OAAjB;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAID,CAAC,CAAC,yBAAD;AAAL;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,QAAQ,EAAEK,UAAlB;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,KAAK,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eASE;AAAA,iBAAIL,CAAC,CAAC,wBAAD,CAAL,QAAmCS,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAaD,CAtBD;;GAAMV,e;UACUD,c;;;KADVC,e;AAwBN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { useTranslation } from \"react-i18next\";\n\nconst DeclinationDays = () => {\n  const { t } = useTranslation();\n  const [days, setDays] = useState(0)\n  const [timeZone, setTimeZone] = useState(3)\n\n  const onTimeZone = (e:any) => {\n    setTimeZone(e.target.value)\n  }\n  const time = moment().utcOffset(timeZone * 60).format('DD.MM.YYYY HH:mm:ss')\n  return (\n    <>\n      <input type=\"number\" onChange={(e) => setDays(parseInt(e.target.value, 10))} />\n      <p>{t('counter.days', {count: days})}</p>\n      <p>{t('timeZone.chooseTimeZone')}</p>\n      <select onChange={onTimeZone}>\n        <option value=\"1\">+1</option>\n        <option value=\"2\">+2</option>\n        <option selected value=\"3\">+3</option>\n      </select>\n      <p>{t('timeZone.nowThisRegion')}: {time}</p>\n    </>\n  )\n}\n\nexport default DeclinationDays"]},"metadata":{},"sourceType":"module"}