{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\component\\\\form\\\\hookForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport SignupSchema from './yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HookForm = () => {\n  _s();\n\n  const [emailInputVal, setEmailInputVal] = useState(\"\");\n  const [passwordInputVal, setPasswordInputVal] = useState(\"\");\n  const [isSubmitting, setSubmittingStatus] = useState(false);\n  const [errorBack, setErrorBack] = useState();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(SignupSchema)\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (isSubmitting) {\n      return;\n    }\n\n    setSubmittingStatus(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(data => console.log(data)) && submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\"),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\"),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HookForm, \"Jbgdc0gkDe4vSU2AMcFc00e4lwA=\", false, function () {\n  return [useForm];\n});\n\n_c = HookForm;\nexport default HookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookForm\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/component/form/hookForm.js"],"names":["React","useState","useForm","yupResolver","SignupSchema","HookForm","emailInputVal","setEmailInputVal","passwordInputVal","setPasswordInputVal","isSubmitting","setSubmittingStatus","errorBack","setErrorBack","register","handleSubmit","formState","errors","resolver","submitHandler","e","preventDefault","data","console","log","email","message","password"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,YAAP,MAAyB,OAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACS,YAAD,EAAeC,mBAAf,IAAsCV,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,EAA1C;AAEA,QAAM;AACJa,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAHP,MAGoBf,OAAO,CAAC;AAChCgB,IAAAA,QAAQ,EAAEf,WAAW,CAACC,YAAD;AADW,GAAD,CAHjC;;AAOA,QAAMe,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIX,YAAJ,EAAkB;AAChB;AACD;;AACDC,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAND;;AAQA,sBACE;AACE,IAAA,QAAQ,EAAEI,YAAY,CAACO,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAT,CAAZ,IAA2CH,aADvD;AAAA,4BAEE,sBACML,QAAQ,CAAC,OAAD,CADd;AAEE,MAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,YAFF,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,EAMGG,MAAM,CAACQ,KAAP,iBAAgB;AAAA,gBAAMR,MAAM,CAACQ,KAAP,CAAaC;AAAnB;AAAA;AAAA;AAAA;AAAA,YANnB,eAOE,sBACMZ,QAAQ,CAAC,UAAD,CADd;AAEE,MAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,YAPF,eAUI;AAAA;AAAA;AAAA;AAAA,YAVJ,EAWGG,MAAM,CAACU,QAAP,iBAAmB;AAAA,gBAAMV,MAAM,CAACU,QAAP,CAAgBD;AAAtB;AAAA;AAAA;AAAA;AAAA,YAXtB,eAYE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CArCD;;GAAMrB,Q;UASsBH,O;;;KATtBG,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, {useState} from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport SignupSchema from './yup'\n\nconst HookForm = () => {\n  const [emailInputVal, setEmailInputVal] = useState(\"\");\n  const [passwordInputVal, setPasswordInputVal] = useState(\"\");\n  const [isSubmitting, setSubmittingStatus] = useState(false)\n  const [errorBack, setErrorBack] = useState()\n\n  const {\n    register,\n    handleSubmit,\n    formState: {errors},} = useForm({\n    resolver: yupResolver(SignupSchema),\n  })\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (isSubmitting) {\n      return\n    }\n    setSubmittingStatus(true);\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit(data => console.log(data)) && submitHandler}>\n      <input\n        {...register(\"email\")}\n        placeholder=\"Email\"\n      /><br />\n      {errors.email && <div>{errors.email.message}</div>}\n      <input\n        {...register(\"password\")}\n        placeholder=\"Password\"\n      /><br />\n      {errors.password && <div>{errors.password.message}</div>}\n      <input type=\"submit\" />\n    </form>\n  )\n}\n\nexport default HookForm"]},"metadata":{},"sourceType":"module"}