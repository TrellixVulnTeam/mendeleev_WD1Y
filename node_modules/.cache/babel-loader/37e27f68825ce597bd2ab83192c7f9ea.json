{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from \"../store/actions\";\nimport axios from \"axios\";\n\nfunction* fetchUser(action) {\n  const getLoginData = axios.then(response => {\n    dispatch({\n      type: SET_PROFILE_DATA,\n      data: response.data.profile,\n      payload: response.data.profile\n    });\n  }).catch(() => {});\n\n  try {\n    const login = yield call('http://localhost:8000/profile', action.payload.login);\n    yield put({\n      type: SET_LOGIN_DATA,\n      login: login\n    });\n  } catch (e) {\n    yield console.log(\"Нет данных\");\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/saga/saga.js"],"names":["call","put","takeEvery","SET_PROFILE_DATA","SET_LOGIN_DATA","axios","fetchUser","action","getLoginData","then","response","dispatch","type","data","profile","payload","catch","login","e","console","log","mySaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AAEA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC1B,QAAMC,YAAY,GAAGH,KAAK,CACvBI,IADkB,CACbC,QAAQ,IAAI;AAChBC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,gBADC;AAEPU,MAAAA,IAAI,EAAEH,QAAQ,CAACG,IAAT,CAAcC,OAFb;AAGPC,MAAAA,OAAO,EAAEL,QAAQ,CAACG,IAAT,CAAcC;AAHhB,KAAD,CAAR;AAKD,GAPkB,EAQlBE,KARkB,CAQZ,MAAM,CACZ,CATkB,CAArB;;AAWA,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMjB,IAAI,CAAC,+BAAD,EAAkCO,MAAM,CAACQ,OAAP,CAAeE,KAAjD,CAAxB;AACA,UAAMhB,GAAG,CAAC;AAACW,MAAAA,IAAI,EAAER,cAAP;AAAuBa,MAAAA,KAAK,EAAEA;AAA9B,KAAD,CAAT;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,UAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACF;;AAED,UAAUC,MAAV,GAAmB;AACjB,QAAMnB,SAAS,CAACC,gBAAD,EAAmBG,SAAnB,CAAf;AACD;;AAED,eAAee,MAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects'\n\nimport {SET_PROFILE_DATA, SET_LOGIN_DATA} from \"../store/actions\"\nimport axios from \"axios\";\n\nfunction* fetchUser(action) {\n  const getLoginData = axios\n    .then(response => {\n      dispatch({\n        type: SET_PROFILE_DATA,\n        data: response.data.profile,\n        payload: response.data.profile,\n      })\n    })\n    .catch(() => {\n    })\n\n  try {\n    const login = yield call('http://localhost:8000/profile', action.payload.login)\n    yield put({type: SET_LOGIN_DATA, login: login})\n  } catch (e) {\n    yield console.log(\"Нет данных\")\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser)\n}\n\nexport default mySaga"]},"metadata":{},"sourceType":"module"}