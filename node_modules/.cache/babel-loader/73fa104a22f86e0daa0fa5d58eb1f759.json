{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { SET_PROFILE_DATA, SET_TIME_ZONE_DATA } from \"../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\n\nconst TimeZone = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const dispatch = useDispatch();\n  const timeZone = useSelector(state => state.timeZone);\n\n  const getTimeZoneData = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    axios.get('http://localhost:8000/timeZone').then(response => {\n      setIsLoading(false);\n      setError(null);\n      dispatch({\n        type: SET_TIME_ZONE_DATA,\n        data: response.data.timeZone\n      });\n    }).catch(() => {\n      setIsLoading(false);\n      setError('Ошибка при загрузке данных');\n    });\n  };\n\n  return {\n    getTimeZoneData,\n    timeZone,\n    isLoading,\n    error\n  };\n};\n\n_s(TimeZone, \"4xlU4dnO8GSxd9MWdu0kdcOU+ZU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TimeZone;\nexport default TimeZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeZone\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/hooks/useTimeZone.js"],"names":["axios","SET_PROFILE_DATA","SET_TIME_ZONE_DATA","useDispatch","useSelector","useState","TimeZone","isLoading","setIsLoading","error","setError","dispatch","timeZone","state","getTimeZoneData","e","preventDefault","get","then","response","type","data","catch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,kBAA1B,QAAmD,kBAAnD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAMM,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,QAAQ,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;;AAEA,QAAME,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAR,IAAAA,KAAK,CACFiB,GADH,CACO,gCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAElB,kBADC;AAEPmB,QAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcT;AAFb,OAAD,CAAR;AAID,KATH,EAUGU,KAVH,CAUS,MAAM;AACXd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACD,KAbH;AAcD,GAjBD;;AAmBA,SAAO;AAAEI,IAAAA,eAAF;AAAmBF,IAAAA,QAAnB;AAA6BL,IAAAA,SAA7B;AAAwCE,IAAAA;AAAxC,GAAP;AACD,CA3BD;;GAAMH,Q;UAGaH,W,EAEAC,W;;;KALbE,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\nimport {SET_PROFILE_DATA, SET_TIME_ZONE_DATA} from \"../store/actions\";\nimport {useDispatch, useSelector } from \"react-redux\";\nimport {useState} from \"react\";\n\nconst TimeZone = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState()\n  const dispatch = useDispatch()\n\n  const timeZone = useSelector((state) => state.timeZone)\n\n  const getTimeZoneData = (e) => {\n    e.preventDefault()\n    setIsLoading(true)\n    axios\n      .get('http://localhost:8000/timeZone')\n      .then(response => {\n        setIsLoading(false)\n        setError(null)\n        dispatch({\n          type: SET_TIME_ZONE_DATA,\n          data: response.data.timeZone,\n        })\n      })\n      .catch(() => {\n        setIsLoading(false)\n        setError('Ошибка при загрузке данных')\n      })\n  }\n\n  return { getTimeZoneData, timeZone, isLoading, error }\n}\n\nexport default TimeZone"]},"metadata":{},"sourceType":"module"}