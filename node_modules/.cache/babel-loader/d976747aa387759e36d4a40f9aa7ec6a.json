{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\component\\\\form\\\\ramilForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { get } from 'lodash';\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RamilForm = ({\n  onSubmit\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [emailInputVal, setEmailInputVal] = useState(\"\");\n  const [passwordInputVal, setPasswordInputVal] = useState(\"\");\n  const [isSubmitting, setSubmittingStatus] = useState(false);\n  const [errorBack, setErrorBack] = useState();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (isSubmitting) {\n      return;\n    }\n\n    setSubmittingStatus(true);\n  };\n\n  axios.post('http://localhost:8000/auth/signUp', {\n    email: emailInputVal,\n    password: passwordInputVal\n  }).then(res => {\n    onSubmit(res);\n    setSubmittingStatus(false);\n  }).catch(err => {\n    setErrorBack(get(err, 'response.data.message'));\n    setSubmittingStatus(false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      text: emailInputVal,\n      onChange: e => setEmailInputVal(e.target.value),\n      placeholder: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      text: passwordInputVal,\n      onChange: e => setPasswordInputVal(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitting,\n      type: \"submit\",\n      children: t(`form.${isSubmitting ? 'loading' : 'send'}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), errorBack && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RamilForm, \"ECsda0G9HjN7+fIV0vGqc4Cm5G4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = RamilForm;\nexport default RamilForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RamilForm\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/component/form/ramilForm.js"],"names":["React","useState","axios","get","useTranslation","RamilForm","onSubmit","t","emailInputVal","setEmailInputVal","passwordInputVal","setPasswordInputVal","isSubmitting","setSubmittingStatus","errorBack","setErrorBack","submitHandler","e","preventDefault","post","email","password","then","res","catch","err","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAAQC,cAAR,QAA6B,eAA7B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAQH,cAAc,EAA5B;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACW,YAAD,EAAeC,mBAAf,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,EAA1C;;AAEA,QAAMe,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIN,YAAJ,EAAkB;AACd;AACH;;AAEDC,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAPD;;AAQAX,EAAAA,KAAK,CACFiB,IADH,CACQ,mCADR,EAC6C;AAACC,IAAAA,KAAK,EAAEZ,aAAR;AAAuBa,IAAAA,QAAQ,EAAEX;AAAjC,GAD7C,EAEGY,IAFH,CAESC,GAAD,IAAS;AACbjB,IAAAA,QAAQ,CAACiB,GAAD,CAAR;AACAV,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GALH,EAMGW,KANH,CAMUC,GAAD,IAAS;AACdV,IAAAA,YAAY,CAACZ,GAAG,CAACsB,GAAD,EAAM,uBAAN,CAAJ,CAAZ;AACAZ,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GATH;AAUA,sBACE;AAAM,IAAA,QAAQ,EAAEG,aAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAER,aADR;AAEE,MAAA,QAAQ,EAAGS,CAAD,IAAOR,gBAAgB,CAACQ,CAAC,CAACS,MAAF,CAASC,KAAV,CAFnC;AAGE,MAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAEjB,gBAFR;AAGE,MAAA,QAAQ,EAAGO,CAAD,IAAON,mBAAmB,CAACM,CAAC,CAACS,MAAF,CAASC,KAAV;AAHtC;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAQ,MAAA,QAAQ,EAAEf,YAAlB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA,gBAA+CL,CAAC,CAAE,QAAOK,YAAY,GAAG,SAAH,GAAe,MAAO,EAA3C;AAAhD;AAAA;AAAA;AAAA;AAAA,YAXF,EAYGE,SAAS,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAZhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzCD;;GAAMT,S;UACUD,c;;;KADVC,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\"\nimport axios from \"axios\"\nimport { get } from 'lodash'\nimport {useTranslation} from \"react-i18next\";\n\nconst RamilForm = ({ onSubmit }) => {\n  const { t } = useTranslation()\n  const [emailInputVal, setEmailInputVal] = useState(\"\");\n  const [passwordInputVal, setPasswordInputVal] = useState(\"\");\n  const [isSubmitting, setSubmittingStatus] = useState(false)\n  const [errorBack, setErrorBack] = useState()\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (isSubmitting) {\n        return \n    }\n\n    setSubmittingStatus(true);\n  };\n  axios\n    .post('http://localhost:8000/auth/signUp', {email: emailInputVal, password: passwordInputVal})\n    .then((res) => {\n      onSubmit(res)\n      setSubmittingStatus(false)\n    })\n    .catch((err) => {\n      setErrorBack(get(err, 'response.data.message'))\n      setSubmittingStatus(false)\n    });\n  return (\n    <form onSubmit={submitHandler}>\n      <input\n        text={emailInputVal}\n        onChange={(e) => setEmailInputVal(e.target.value)}\n        placeholder=\"email\"\n      />\n      <input\n        type=\"password\"\n        text={passwordInputVal}\n        onChange={(e) => setPasswordInputVal(e.target.value)}\n      />\n      <button disabled={isSubmitting} type=\"submit\">{t(`form.${isSubmitting ? 'loading' : 'send'}`)}</button>\n      {errorBack && <div>{errorBack}</div>}\n    </form>\n  );\n};\n\nexport default RamilForm;\n"]},"metadata":{},"sourceType":"module"}