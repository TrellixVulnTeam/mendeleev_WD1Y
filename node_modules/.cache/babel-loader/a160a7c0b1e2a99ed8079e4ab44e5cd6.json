{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\index.js\";\nimport React from 'react';\nimport './i118n';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nreportWebVitals(); //todo: понять зачем нужны formGroup в Formik просто бутстраповская хрень\n// готово\n//todo: разобраться как работает takeEvery, call, put в сагах\n// готово\n//todo: перевести стили в SCSS\n// Проблема с версиями (откатил к обычным стилям)\n//todo: сделать асинхронную проверку полей. (отправили форму, если есть логин, то ошибку вывести) сделать метот на беке\n// created login если совпадает, то ошибка\n// Готово\n//todo: сделать одинаковые формы (регистрации) написать и переиспользовать в двух формах (не забыть про асинхронность)\n//todo: в формах делать валидацию через yap... сделать 2 формы. yap переиспользовать\n// https://react-hook-form.com/api/useform import { yupResolver } from '@hookform/resolvers/yup';\n//todo: асинхронная валидация у остальных форм.\n//todo: изучить https://momentjs.com/docs/#/manipulating/utc-offset/ сделать более элегатное решение с выбором таймзон\n//todo: выводить ошибку если с бека не пришли данные","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/index.js"],"names":["React","ReactDOM","reportWebVitals","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,aAAP;;AAGAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOAJ,eAAe,G,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\nimport './i118n';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './App';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n//todo: понять зачем нужны formGroup в Formik просто бутстраповская хрень\n// готово\n//todo: разобраться как работает takeEvery, call, put в сагах\n// готово\n//todo: перевести стили в SCSS\n// Проблема с версиями (откатил к обычным стилям)\n//todo: сделать асинхронную проверку полей. (отправили форму, если есть логин, то ошибку вывести) сделать метот на беке\n// created login если совпадает, то ошибка\n// Готово\n\n//todo: сделать одинаковые формы (регистрации) написать и переиспользовать в двух формах (не забыть про асинхронность)\n//todo: в формах делать валидацию через yap... сделать 2 формы. yap переиспользовать\n\n\n// https://react-hook-form.com/api/useform import { yupResolver } from '@hookform/resolvers/yup';\n\n//todo: асинхронная валидация у остальных форм.\n//todo: изучить https://momentjs.com/docs/#/manipulating/utc-offset/ сделать более элегатное решение с выбором таймзон\n//todo: выводить ошибку если с бека не пришли данные\n\n\n"]},"metadata":{},"sourceType":"module"}