{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions';\n\nfunction* fetchUser() {\n  try {\n    const data = () => {\n      return axios.get('https://jsonplaceholder.typicode.com/todos/1').then(response => response.data);\n    };\n\n    console.log({\n      type: SET_LOGIN_DATA,\n      payload: data\n    });\n    yield put({\n      type: SET_LOGIN_DATA,\n      payload: data\n    });\n  } catch (e) {\n    yield console.log('Нет данных');\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/saga/saga.js"],"names":["put","takeEvery","axios","SET_PROFILE_DATA","SET_LOGIN_DATA","fetchUser","data","get","then","response","console","log","type","payload","e","mySaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,kBAAjD;;AAEA,UAAUC,SAAV,GAAsB;AACpB,MAAI;AACF,UAAMC,IAAI,GAAI,MAAM;AAClB,aACEJ,KAAK,CACFK,GADH,CACO,8CADP,EAEGC,IAFH,CAESC,QAAD,IAAcA,QAAQ,CAACH,IAF/B,CADF;AAKD,KAND;;AAOAI,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,MAAAA,IAAI,EAAER,cAAP;AAAuBS,MAAAA,OAAO,EAAEP;AAAhC,KAAZ;AACA,UAAMN,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAER,cAAP;AAAuBS,MAAAA,OAAO,EAAEP;AAAhC,KAAD,CAAT;AACD,GAVD,CAUE,OAAOQ,CAAP,EAAU;AACV,UAAMJ,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACF;;AAED,UAAUI,MAAV,GAAmB;AACjB,QAAMd,SAAS,CAACE,gBAAD,EAAmBE,SAAnB,CAAf;AACD;;AAED,eAAeU,MAAf","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects'\nimport axios from 'axios'\n\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions'\n\nfunction* fetchUser() {\n  try {\n    const data = (() => {\n      return (\n        axios\n          .get('https://jsonplaceholder.typicode.com/todos/1')\n          .then((response) => response.data)\n      )\n    })\n    console.log({type: SET_LOGIN_DATA, payload: data})\n    yield put({type: SET_LOGIN_DATA, payload: data})\n  } catch (e) {\n    yield console.log('Нет данных')\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser)\n}\n\nexport default mySaga"]},"metadata":{},"sourceType":"module"}