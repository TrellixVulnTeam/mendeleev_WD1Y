{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\component\\\\timeZone\\\\timeZone.js\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport useTimeZone from \"../../hooks/useTimeZone\";\nimport moment from \"moment\";\nimport { get } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeZone = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    getTimeZoneData,\n    timeZone\n  } = useTimeZone();\n  const date = get(timeZone, `dateCreated`);\n  const createdDate = moment(date).format('DD-MM-YYYY');\n  const createdTime = moment(date).format('HH:mm:ss');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getTimeZoneData,\n        children: t(`utils.getDataTimeZone`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(timeZone)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), t('timeZone.date'), \": \", createdDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), t('timeZone.time'), \": \", createdTime]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimeZone, \"PYbexRZtEe2ETHKx87L3ZRDgQz0=\", false, function () {\n  return [useTranslation, useTimeZone];\n});\n\n_c = TimeZone;\nexport default TimeZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeZone\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/component/timeZone/timeZone.js"],"names":["useTranslation","useTimeZone","moment","get","TimeZone","t","getTimeZoneData","timeZone","date","createdDate","format","createdTime","JSON","stringify"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,GAAT,QAAoB,QAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AAEA,QAAM;AAACM,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,MAA8BN,WAAW,EAA/C;AACA,QAAMO,IAAI,GAAGL,GAAG,CAACI,QAAD,EAAY,aAAZ,CAAhB;AACA,QAAME,WAAW,GAAGP,MAAM,CAACM,IAAD,CAAN,CAAaE,MAAb,CAAoB,YAApB,CAApB;AACA,QAAMC,WAAW,GAAGT,MAAM,CAACM,IAAD,CAAN,CAAaE,MAAb,CAAoB,UAApB,CAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEJ,eAAjB;AAAA,kBAAmCD,CAAC,CAAE,uBAAF;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBACGO,IAAI,CAACC,SAAL,CAAeN,QAAf;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,EAOGF,CAAC,CAAC,eAAD,CAPJ,QAOyBI,WAPzB,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,EASGJ,CAAC,CAAC,eAAD,CATJ,QASyBM,WATzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArBD;;GAAMP,Q;UACUJ,c,EAEsBC,W;;;KAHhCG,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport useTimeZone from \"../../hooks/useTimeZone\";\nimport moment from \"moment\";\nimport { get } from \"lodash\"\n\nconst TimeZone = () => {\n  const { t } = useTranslation();\n\n  const {getTimeZoneData, timeZone} = useTimeZone()\n  const date = get(timeZone, `dateCreated`)\n  const createdDate = moment(date).format('DD-MM-YYYY')\n  const createdTime = moment(date).format('HH:mm:ss')\n\n  return (\n    <div className=\"App\">\n      <form>\n        <button onClick={getTimeZoneData}>{t(`utils.getDataTimeZone`)}</button>\n      </form>\n      <pre>\n        {JSON.stringify(timeZone)}\n      </pre>\n      {t('timeZone.date')}: {createdDate}\n      <br/>\n      {t('timeZone.time')}: {createdTime}\n    </div>\n  );\n}\n\nexport default TimeZone;\n"]},"metadata":{},"sourceType":"module"}