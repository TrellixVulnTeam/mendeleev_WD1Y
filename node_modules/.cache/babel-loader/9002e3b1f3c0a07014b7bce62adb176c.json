{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions';\n\nfunction* fetchUser() {\n  const p = axios.get('https://jsonplaceholder.typicode.com/todos/1');\n\n  try {\n    const login = p.then(data => console.log(data));\n    const qwe = p.then(data => data);\n    console.log(qwe);\n    yield put({\n      type: SET_LOGIN_DATA,\n      payload: login\n    });\n  } catch (e) {\n    yield console.log('Нет данных');\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/saga/saga.js"],"names":["put","takeEvery","axios","SET_PROFILE_DATA","SET_LOGIN_DATA","fetchUser","p","get","login","then","data","console","log","qwe","type","payload","e","mySaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,kBAAjD;;AAEA,UAAUC,SAAV,GAAsB;AACpB,QAAMC,CAAC,GAAGJ,KAAK,CACVK,GADK,CACD,8CADC,CAAV;;AAGA,MAAI;AACF,UAAMC,KAAK,GAAGF,CAAC,CAACG,IAAF,CAAOC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAf,CAAd;AACA,UAAMG,GAAG,GAAGP,CAAC,CAACG,IAAF,CAAOC,IAAI,IAAIA,IAAf,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,UAAMb,GAAG,CAAC;AAACc,MAAAA,IAAI,EAAEV,cAAP;AAAuBW,MAAAA,OAAO,EAAEP;AAAhC,KAAD,CAAT;AACD,GALD,CAKE,OAAOQ,CAAP,EAAU;AACV,UAAML,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACF;;AAED,UAAUK,MAAV,GAAmB;AACjB,QAAMhB,SAAS,CAACE,gBAAD,EAAmBE,SAAnB,CAAf;AACD;;AAED,eAAeY,MAAf","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects'\nimport axios from 'axios'\n\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions'\n\nfunction* fetchUser() {\n  const p = axios\n      .get('https://jsonplaceholder.typicode.com/todos/1')\n\n  try {\n    const login = p.then(data => console.log(data))\n    const qwe = p.then(data => data)\n    console.log(qwe)\n    yield put({type: SET_LOGIN_DATA, payload: login})\n  } catch (e) {\n    yield console.log('Нет данных')\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser)\n}\n\nexport default mySaga"]},"metadata":{},"sourceType":"module"}