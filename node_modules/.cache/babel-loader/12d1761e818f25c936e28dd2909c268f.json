{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\component\\\\form\\\\firmikFirst.js\";\nimport React from \"react\";\nimport * as yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupSchema = yup.object().shape({\n  firstName: yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n  email: yup.string().email('Invalid email').required('Required')\n});\n\nconst FormikFirst = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: '',\n      email: ''\n    },\n    validationSchema: SignupSchema,\n    onSubmit: values => {\n      console.log(values);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormikFirst;\nexport default FormikFirst;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormikFirst\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/component/form/firmikFirst.js"],"names":["React","yup","Field","Form","Formik","SignupSchema","object","shape","firstName","string","min","max","required","email","FormikFirst","values","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,QAAlC;;AAEA,MAAMC,YAAY,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACtCC,EAAAA,SAAS,EAAEP,GAAG,CAACQ,MAAJ,GACRC,GADQ,CACJ,CADI,EACD,YADC,EAERC,GAFQ,CAEJ,EAFI,EAEA,WAFA,EAGRC,QAHQ,CAGC,UAHD,CAD2B;AAKtCC,EAAAA,KAAK,EAAEZ,GAAG,CAACQ,MAAJ,GAAaI,KAAb,CAAmB,eAAnB,EAAoCD,QAApC,CAA6C,UAA7C;AAL+B,CAAnB,CAArB;;AAQA,MAAME,WAAW,GAAG,MAAM;AACxB,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACfN,MAAAA,SAAS,EAAE,EADI;AAEfK,MAAAA,KAAK,EAAE;AAFQ,KADjB;AAKE,IAAA,gBAAgB,EAAER,YALpB;AAME,IAAA,QAAQ,EAAEU,MAAM,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAlCD;;KAAMD,W;AAoCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport * as yup from \"yup\";\nimport {Field, Form, Formik} from \"formik\";\n\nconst SignupSchema = yup.object().shape({\n  firstName: yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: yup.string().email('Invalid email').required('Required'),\n});\n\nconst FormikFirst = () => {\n  return (\n    <Formik\n      initialValues={{\n      firstName: '',\n      email: '',\n    }}\n      validationSchema={SignupSchema}\n      onSubmit={values => {\n        console.log(values);\n      }}\n    >\n      {/*{({ errors, touched }) => (*/}\n      {/*  <Form>*/}\n      {/*    <Field*/}\n      {/*      type=\"text\"*/}\n      {/*      name=\"firstName\"*/}\n      {/*      placeholder=\"Имя\"*/}\n      {/*    /><br />*/}\n      {/*    {errors.firstName && touched.firstName ? (*/}\n      {/*      <div>{errors.firstName}</div>*/}\n      {/*    ) : null}*/}\n      {/*    <Field*/}\n      {/*      placeholder=\"Email\"*/}\n      {/*      name=\"email\"*/}\n      {/*    /><br />*/}\n      {/*    {errors.email && touched.email ? <div>{errors.email}</div> : null}*/}\n      {/*    <button type=\"submit\">*/}\n      {/*      Отправить*/}\n      {/*    </button>*/}\n      {/*  </Form>*/}\n      {/*)}*/}\n    </Formik>\n  );\n};\n\nexport default FormikFirst;"]},"metadata":{},"sourceType":"module"}