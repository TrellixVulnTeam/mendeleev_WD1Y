{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions';\nlet result = '';\n\nfunction parse(url) {\n  return new Promise(function (resolve, reject) {\n    request(url, {\n      json: true\n    }, function (error, response, body) {\n      if (error) {\n        reject(error);\n      }\n\n      resolve(body);\n    });\n  });\n}\n\nlet inf = parse(url).then(val => {\n  data.map(row => row.inf = val[3]);\n  return data;\n}).then(data => {\n  result = data[0];\n}).catch(function (err) {\n  console.error(err);\n});\nconsole.log(inf); ///<pending>\n\nconsole.log(result); ///undefind\n\nfunction* fetchUser() {\n  const data = () => {\n    return axios.get('https://jsonplaceholder.typicode.com/todos/1').then(r => r.data);\n  };\n\n  try {\n    const login = data();\n    console.log(login);\n    yield put({\n      type: SET_LOGIN_DATA,\n      payload: login\n    });\n  } catch (e) {\n    yield console.log('Нет данных');\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/saga/saga.js"],"names":["put","takeEvery","axios","SET_PROFILE_DATA","SET_LOGIN_DATA","result","parse","url","Promise","resolve","reject","request","json","error","response","body","inf","then","val","data","map","row","catch","err","console","log","fetchUser","get","r","login","type","payload","e","mySaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,kBAAjD;AAKA,IAAIC,MAAM,GAAG,EAAb;;AACA,SAASC,KAAT,CAAeC,GAAf,EAAmB;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAAyB;AAC1CC,IAAAA,OAAO,CAACJ,GAAD,EAAK;AAACK,MAAAA,IAAI,EAAE;AAAP,KAAL,EAAmB,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AACzD,UAAIF,KAAJ,EAAW;AAAEH,QAAAA,MAAM,CAACG,KAAD,CAAN;AAAgB;;AAC7BJ,MAAAA,OAAO,CAACM,IAAD,CAAP;AACD,KAHM,CAAP;AAID,GALM,CAAP;AAMD;;AACD,IAAIC,GAAG,GAAGV,KAAK,CAACC,GAAD,CAAL,CACPU,IADO,CACDC,GAAD,IAAS;AACbC,EAAAA,IAAI,CAACC,GAAL,CAASC,GAAG,IAAIA,GAAG,CAACL,GAAJ,GAAUE,GAAG,CAAC,CAAD,CAA7B;AACF,SAAOC,IAAP;AACC,CAJO,EAKPF,IALO,CAKDE,IAAD,IAAU;AAEhBd,EAAAA,MAAM,GAAGc,IAAI,CAAC,CAAD,CAAb;AAED,CATS,EASPG,KATO,CASD,UAASC,GAAT,EAAc;AACrBC,EAAAA,OAAO,CAACX,KAAR,CAAcU,GAAd;AACD,CAXS,CAAV;AAaAC,OAAO,CAACC,GAAR,CAAYT,GAAZ,E,CAAkB;;AAClBQ,OAAO,CAACC,GAAR,CAAYpB,MAAZ,E,CAAsB;;AAOtB,UAAUqB,SAAV,GAAsB;AACpB,QAAMP,IAAI,GAAI,MAAM;AAClB,WACEjB,KAAK,CACFyB,GADH,CACO,8CADP,EAEGV,IAFH,CAEQW,CAAC,IAAGA,CAAC,CAACT,IAFd,CADF;AAKD,GAND;;AAQA,MAAI;AACF,UAAMU,KAAK,GAAGV,IAAI,EAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,UAAM7B,GAAG,CAAC;AAAC8B,MAAAA,IAAI,EAAE1B,cAAP;AAAuB2B,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAAT;AACD,GAJD,CAIE,OAAOG,CAAP,EAAU;AACV,UAAMR,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACF;;AAED,UAAUQ,MAAV,GAAmB;AACjB,QAAMhC,SAAS,CAACE,gBAAD,EAAmBuB,SAAnB,CAAf;AACD;;AAED,eAAeO,MAAf","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects'\nimport axios from 'axios'\n\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions'\n\n\n\n\nlet result = '';\nfunction parse(url){\n  return new Promise(function(resolve, reject){\n    request(url,{json: true}, function (error, response, body) {\n      if (error) { reject(error); }\n      resolve(body);\n    });\n  });\n}\nlet inf = parse(url)\n  .then((val) => {\n    data.map(row => row.inf = val[3])\n  return data;\n  })\n  .then((data) => {\n\n  result = data[0];\n\n}).catch(function(err) {\n  console.error(err);\n});\n\nconsole.log(inf); ///<pending>\nconsole.log(result ); ///undefind\n\n\n\n\n\n\nfunction* fetchUser() {\n  const data = (() => {\n    return (\n      axios\n        .get('https://jsonplaceholder.typicode.com/todos/1')\n        .then(r =>r.data)\n    )\n  })\n\n  try {\n    const login = data()\n    console.log(login)\n    yield put({type: SET_LOGIN_DATA, payload: login})\n  } catch (e) {\n    yield console.log('Нет данных')\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser)\n}\n\nexport default mySaga"]},"metadata":{},"sourceType":"module"}