{"ast":null,"code":"var _jsxFileName = \"/Users/kamil/Desktop/TZ/mendeleev-practice-project/src/component/ChatPage/MessageContainer/MessageContainer.tsx\";\nimport React from 'react';\nimport Message from '../Message/Message';\nimport { map, find } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageContainer = ({\n  messages,\n  members\n}) => {\n  const messageList = map(messages, message => /*#__PURE__*/_jsxDEV(Message, {\n    sender: find(members, member => member.uuid === message.sender_id),\n    message: message\n  }, message.uuid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: messageList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MessageContainer;\nexport default MessageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageContainer\");","map":{"version":3,"sources":["/Users/kamil/Desktop/TZ/mendeleev-practice-project/src/component/ChatPage/MessageContainer/MessageContainer.tsx"],"names":["React","Message","map","find","MessageContainer","messages","members","messageList","message","member","uuid","sender_id"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,QAA1B;;;AAeA,MAAMC,gBAAuC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AACzE,QAAMC,WAAW,GAAGL,GAAG,CAACG,QAAD,EAAYG,OAAO,iBACxC,QAAC,OAAD;AAEE,IAAA,MAAM,EAAEL,IAAI,CAACG,OAAD,EAAWG,MAAD,IAAYA,MAAM,CAACC,IAAP,KAAgBF,OAAO,CAACG,SAA9C,CAFd;AAGE,IAAA,OAAO,EAAEH;AAHX,KACOA,OAAO,CAACE,IADf;AAAA;AAAA;AAAA;AAAA,UADqB,CAAvB;AAQA,sBACE;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD;;KAAMH,gB;AAgBN,eAAeA,gBAAf","sourcesContent":["import React, { FC } from 'react'\nimport Message from '../Message/Message'\nimport { map, find } from 'lodash'\n\ninterface IMessageContainer {\n  messages: {\n    content: string,\n    sender_id: string,\n    uuid: string\n  }[]\n  members: {\n    is_online: boolean\n    name: string\n    uuid: string\n  }[]\n}\n\nconst MessageContainer: FC<IMessageContainer> = ({ messages, members }) => {\n  const messageList = map(messages, (message =>\n    <Message\n      key={message.uuid}\n      sender={find(members, (member) => member.uuid === message.sender_id)}\n      message={message}\n    />\n  ))\n\n  return (\n    <section>\n      {messageList}\n    </section>\n  )\n}\n\nexport default MessageContainer\n"]},"metadata":{},"sourceType":"module"}