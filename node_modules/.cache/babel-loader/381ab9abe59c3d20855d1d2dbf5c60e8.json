{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from \"../store/actions\";\nimport axios from \"axios\";\n\nfunction* fetchUser(action) {\n  const getLoginData = () => {\n    axios.get('https://jsonplaceholder.typicode.com/todos/1');\n  };\n\n  try {\n    const login = yield call(getLoginData);\n    console.log(login);\n    yield put({\n      type: SET_LOGIN_DATA,\n      login: login\n    });\n  } catch (e) {\n    yield console.log(\"Нет данных\");\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/saga/saga.js"],"names":["call","put","takeEvery","SET_PROFILE_DATA","SET_LOGIN_DATA","axios","fetchUser","action","getLoginData","get","login","console","log","type","e","mySaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AAEA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC1B,QAAMC,YAAY,GAAG,MAAM;AACzBH,IAAAA,KAAK,CACFI,GADH,CACO,8CADP;AAED,GAHD;;AAKA,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMV,IAAI,CAACQ,YAAD,CAAxB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMT,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAET,cAAP;AAAuBM,MAAAA,KAAK,EAAEA;AAA9B,KAAD,CAAT;AACD,GAJD,CAIE,OAAOI,CAAP,EAAU;AACV,UAAMH,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACF;;AAED,UAAUG,MAAV,GAAmB;AACjB,QAAMb,SAAS,CAACC,gBAAD,EAAmBG,SAAnB,CAAf;AACD;;AAED,eAAeS,MAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects'\n\nimport {SET_PROFILE_DATA, SET_LOGIN_DATA} from \"../store/actions\"\nimport axios from \"axios\";\n\nfunction* fetchUser(action) {\n  const getLoginData = () => {\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos/1')\n  }\n\n  try {\n    const login = yield call(getLoginData)\n    console.log(login)\n    yield put({type: SET_LOGIN_DATA, login: login})\n  } catch (e) {\n    yield console.log(\"Нет данных\")\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser)\n}\n\nexport default mySaga"]},"metadata":{},"sourceType":"module"}