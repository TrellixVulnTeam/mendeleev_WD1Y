{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\component\\\\form\\\\firmikFirst.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport SignupSchema from './yup';\nimport axios from 'axios';\nimport { get } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormikFirst = () => {\n  _s();\n\n  const [emailInputVal, setEmailInputVal] = useState(\"\");\n  const [passwordInputVal, setPasswordInputVal] = useState(\"\");\n  const [isSubmitting, setSubmittingStatus] = useState(false);\n  const [errorBack, setErrorBack] = useState();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (isSubmitting) {\n      return;\n    }\n\n    setSubmittingStatus(true);\n    axios.post('http://localhost:8000/auth/signUp', {\n      email: emailInputVal,\n      password: passwordInputVal\n    }).then(res => {\n      setSubmittingStatus(false);\n    }).catch(err => {\n      setErrorBack(get(err, 'response.data.message'));\n      setSubmittingStatus(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: SignupSchema,\n    onSubmit: values => {\n      submitHandler && console.log(values);\n    },\n    children: ({\n      errors,\n      touched\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: e => setEmailInputVal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        onChange: e => setPasswordInputVal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 50\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), errorBack && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errorBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormikFirst, \"Vw6Vc/8q//L1zvvAF8sq9R+mmlI=\");\n\n_c = FormikFirst;\nexport default FormikFirst;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormikFirst\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/component/form/firmikFirst.js"],"names":["React","useState","Field","Form","Formik","SignupSchema","axios","get","FormikFirst","emailInputVal","setEmailInputVal","passwordInputVal","setPasswordInputVal","isSubmitting","setSubmittingStatus","errorBack","setErrorBack","submitHandler","e","preventDefault","post","email","password","then","res","catch","err","values","console","log","errors","touched","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Field, Form, Formik } from 'formik'\n\nimport SignupSchema from './yup'\nimport axios from 'axios'\nimport {get} from 'lodash'\n\nconst FormikFirst = () => {\n  const [emailInputVal, setEmailInputVal] = useState(\"\");\n  const [passwordInputVal, setPasswordInputVal] = useState(\"\");\n  const [isSubmitting, setSubmittingStatus] = useState(false)\n  const [errorBack, setErrorBack] = useState()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (isSubmitting) {\n      return\n    }\n    setSubmittingStatus(true);\n    axios\n      .post('http://localhost:8000/auth/signUp', {email: emailInputVal, password: passwordInputVal})\n      .then((res) => {\n        setSubmittingStatus(false)\n      })\n      .catch((err) => {\n        setErrorBack(get(err, 'response.data.message'))\n        setSubmittingStatus(false)\n      })\n  }\n\n  return (\n    <Formik\n      initialValues={{\n      email: '',\n      password: '',\n    }}\n      validationSchema={SignupSchema}\n      onSubmit={values => {\n        submitHandler &&\n        console.log(values)\n      }}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <Field\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={(e) => setEmailInputVal(e.target.value)}\n          /><br />\n          {errors.email && touched.email ? (\n            <div>{errors.email}</div>\n          ) : null}\n          <Field\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={(e) => setPasswordInputVal(e.target.value)}\n          /><br />\n          {errors.password && touched.password ? <div>{errors.password}</div> : null}\n          <button type=\"submit\">\n            Отправить\n          </button>\n          {errorBack && <div>{errorBack}</div>}\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default FormikFirst"]},"metadata":{},"sourceType":"module"}