{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\component\\\\form\\\\ramilForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport useSignUp from \"../../hooks/useSignUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RamilForm = ({\n  onSubmit\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (isSubmitting) {\n      return;\n    }\n  };\n\n  const {\n    emailInputVal,\n    passwordInputVal,\n    isSubmitting,\n    errorBack,\n    setEmailInputVal,\n    setPasswordInputVal\n  } = useSignUp(onSubmit);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      text: emailInputVal,\n      onChange: e => setEmailInputVal(e.target.value),\n      placeholder: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      text: passwordInputVal,\n      onChange: e => setPasswordInputVal(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitting,\n      type: \"submit\",\n      children: t(`form.${isSubmitting ? 'loading' : 'send'}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), errorBack && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RamilForm, \"CXiENpyOVzClTJ8muyq3tCdk0ro=\", false, function () {\n  return [useTranslation, useSignUp];\n});\n\n_c = RamilForm;\nexport default RamilForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RamilForm\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/component/form/ramilForm.js"],"names":["React","useState","useTranslation","useSignUp","RamilForm","onSubmit","t","submitHandler","e","preventDefault","isSubmitting","emailInputVal","passwordInputVal","errorBack","setEmailInputVal","setPasswordInputVal","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,cAAR,QAA6B,eAA7B;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;;AAEA,QAAMK,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIC,YAAJ,EAAkB;AACd;AACH;AACF,GALD;;AAMA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,gBAAjB;AAAmCF,IAAAA,YAAnC;AAAiDG,IAAAA,SAAjD;AAA4DC,IAAAA,gBAA5D;AAA8EC,IAAAA;AAA9E,MAAsGZ,SAAS,CAACE,QAAD,CAArH;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEE,aAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAEI,aADR;AAEE,MAAA,QAAQ,EAAGH,CAAD,IAAOM,gBAAgB,CAACN,CAAC,CAACQ,MAAF,CAASC,KAAV,CAFnC;AAGE,MAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAEL,gBAFR;AAGE,MAAA,QAAQ,EAAGJ,CAAD,IAAOO,mBAAmB,CAACP,CAAC,CAACQ,MAAF,CAASC,KAAV;AAHtC;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAQ,MAAA,QAAQ,EAAEP,YAAlB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA,gBAA+CJ,CAAC,CAAE,QAAOI,YAAY,GAAG,SAAH,GAAe,MAAO,EAA3C;AAAhD;AAAA;AAAA;AAAA;AAAA,YAXF,EAYGG,SAAS,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAZhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1BD;;GAAMT,S;UACUF,c,EAQ8FC,S;;;KATxGC,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\"\nimport {useTranslation} from \"react-i18next\";\n\nimport useSignUp from \"../../hooks/useSignUp\";\n\nconst RamilForm = ({ onSubmit }) => {\n  const { t } = useTranslation()\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (isSubmitting) {\n        return \n    }\n  };\n  const { emailInputVal, passwordInputVal, isSubmitting, errorBack, setEmailInputVal, setPasswordInputVal } = useSignUp(onSubmit)\n  return (\n    <form onSubmit={submitHandler}>\n      <input\n        text={emailInputVal}\n        onChange={(e) => setEmailInputVal(e.target.value)}\n        placeholder=\"email\"\n      />\n      <input\n        type=\"password\"\n        text={passwordInputVal}\n        onChange={(e) => setPasswordInputVal(e.target.value)}\n      />\n      <button disabled={isSubmitting} type=\"submit\">{t(`form.${isSubmitting ? 'loading' : 'send'}`)}</button>\n      {errorBack && <div>{errorBack}</div>}\n    </form>\n  );\n};\n\nexport default RamilForm;\n"]},"metadata":{},"sourceType":"module"}