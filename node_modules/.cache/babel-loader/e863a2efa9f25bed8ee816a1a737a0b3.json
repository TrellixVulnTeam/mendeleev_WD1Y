{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\component\\\\timeZone\\\\timeZone.js\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport useTimeZone from \"../../hooks/useTimeZone\";\nimport moment from \"moment\";\nimport { get } from \"lodash\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeZone = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    getTimeZoneData,\n    timeZone,\n    isLoading,\n    error\n  } = useTimeZone();\n  const date = get(timeZone, `dateCreated`);\n  const createdDate = moment(date).format('DD-MM-YYYY');\n  const createdTime = moment(date).format('HH:mm:ss');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getTimeZoneData,\n        children: t(`utils.getDataTimeZone`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [isLoading && 'Загрузка данных', !isLoading && JSON.stringify(timeZone) !== '{}' && JSON.stringify(timeZone), error && !isLoading && error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), t('timeZone.date'), \": \", createdDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), t('timeZone.time'), \": \", createdTime]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimeZone, \"6VHVGQtXABvccIDYjCiy1CeTguw=\", false, function () {\n  return [useTranslation, useTimeZone];\n});\n\n_c = TimeZone;\nexport default TimeZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeZone\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/component/timeZone/timeZone.js"],"names":["useTranslation","useTimeZone","moment","get","React","TimeZone","t","getTimeZoneData","timeZone","isLoading","error","date","createdDate","format","createdTime","JSON","stringify"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AAEA,QAAM;AAAEO,IAAAA,eAAF;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,MAAkDT,WAAW,EAAnE;AACA,QAAMU,IAAI,GAAGR,GAAG,CAACK,QAAD,EAAY,aAAZ,CAAhB;AACA,QAAMI,WAAW,GAAGV,MAAM,CAACS,IAAD,CAAN,CAAaE,MAAb,CAAoB,YAApB,CAApB;AACA,QAAMC,WAAW,GAAGZ,MAAM,CAACS,IAAD,CAAN,CAAaE,MAAb,CAAoB,UAApB,CAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEN,eAAjB;AAAA,kBAAmCD,CAAC,CAAE,uBAAF;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,iBACGG,SAAS,IAAI,iBADhB,EAEG,CAACA,SAAD,IAAcM,IAAI,CAACC,SAAL,CAAeR,QAAf,MAA6B,IAA3C,IAAmDO,IAAI,CAACC,SAAL,CAAeR,QAAf,CAFtD,EAGGE,KAAK,IAAI,CAACD,SAAV,IAAuBC,KAH1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EASGJ,CAAC,CAAC,eAAD,CATJ,QASyBM,WATzB,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,EAWGN,CAAC,CAAC,eAAD,CAXJ,QAWyBQ,WAXzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAvBD;;GAAMT,Q;UACUL,c,EAE0CC,W;;;KAHpDI,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport useTimeZone from \"../../hooks/useTimeZone\";\nimport moment from \"moment\";\nimport { get } from \"lodash\"\nimport React from \"react\";\n\nconst TimeZone = () => {\n  const { t } = useTranslation();\n\n  const { getTimeZoneData, timeZone, isLoading, error } = useTimeZone()\n  const date = get(timeZone, `dateCreated`)\n  const createdDate = moment(date).format('DD-MM-YYYY')\n  const createdTime = moment(date).format('HH:mm:ss')\n\n  return (\n    <div className=\"App\">\n      <form>\n        <button onClick={getTimeZoneData}>{t(`utils.getDataTimeZone`)}</button>\n      </form>\n      <pre>\n        {isLoading && 'Загрузка данных'}\n        {!isLoading && JSON.stringify(timeZone) !== '{}' && JSON.stringify(timeZone)}\n        {error && !isLoading && error}\n      </pre>\n      {t('timeZone.date')}: {createdDate}\n      <br/>\n      {t('timeZone.time')}: {createdTime}\n    </div>\n  );\n}\n\nexport default TimeZone;\n"]},"metadata":{},"sourceType":"module"}