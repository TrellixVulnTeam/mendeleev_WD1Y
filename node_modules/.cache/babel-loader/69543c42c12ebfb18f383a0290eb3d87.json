{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from '../store/actions';\nimport axios from 'axios';\n\nfunction* fetchUser(action) {\n  console.log(action);\n\n  const data = () => {\n    return axios.get('https://jsonplaceholder.typicode.com/todos/1');\n  };\n\n  try {\n    const login = yield call(data, action.payload.login);\n    console.log(login);\n    yield put({\n      type: SET_LOGIN_DATA,\n      login: login\n    });\n  } catch (e) {\n    yield console.log('Нет данных');\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/saga/saga.js"],"names":["call","put","takeEvery","SET_PROFILE_DATA","SET_LOGIN_DATA","axios","fetchUser","action","console","log","data","get","login","payload","type","e","mySaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AAEA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAMG,IAAI,GAAI,MAAM;AAClB,WACEL,KAAK,CACFM,GADH,CACO,8CADP,CADF;AAID,GALD;;AAOA,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMZ,IAAI,CAACU,IAAD,EAAOH,MAAM,CAACM,OAAP,CAAeD,KAAtB,CAAxB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,UAAMX,GAAG,CAAC;AAACa,MAAAA,IAAI,EAAEV,cAAP;AAAuBQ,MAAAA,KAAK,EAAEA;AAA9B,KAAD,CAAT;AACD,GAJD,CAIE,OAAOG,CAAP,EAAU;AACV,UAAMP,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACF;;AAED,UAAUO,MAAV,GAAmB;AACjB,QAAMd,SAAS,CAACC,gBAAD,EAAmBG,SAAnB,CAAf;AACD;;AAED,eAAeU,MAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects'\n\nimport {SET_PROFILE_DATA, SET_LOGIN_DATA} from '../store/actions'\nimport axios from 'axios'\n\nfunction* fetchUser(action) {\n  console.log(action)\n  const data = (() => {\n    return (\n      axios\n        .get('https://jsonplaceholder.typicode.com/todos/1')\n    )\n  })\n\n  try { \n    const login = yield call(data, action.payload.login)\n    console.log(login)\n    yield put({type: SET_LOGIN_DATA, login: login})\n  } catch (e) {\n    yield console.log('Нет данных')\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser)\n}\n\nexport default mySaga"]},"metadata":{},"sourceType":"module"}