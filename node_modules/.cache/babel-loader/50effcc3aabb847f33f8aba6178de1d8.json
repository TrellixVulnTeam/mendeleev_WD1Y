{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { SET_PROFILE_DATA, SET_TIME_ZONE_DATA } from \"../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst TimeZone = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const timeZone = useSelector(state => state.timeZone);\n\n  const getTimeZoneData = e => {\n    e.preventDefault();\n    axios.get('http://localhost:8000/timeZone').then(response => {\n      dispatch({\n        type: SET_TIME_ZONE_DATA,\n        data: response.data.timeZone\n      });\n    }).catch();\n  };\n\n  return {\n    getTimeZoneData,\n    timeZone\n  };\n};\n\n_s(TimeZone, \"glE0nrkBWagX1yYeSVMBz8Kj7dw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TimeZone;\nexport default TimeZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeZone\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/hooks/useTimeZone.js"],"names":["axios","SET_PROFILE_DATA","SET_TIME_ZONE_DATA","useDispatch","useSelector","TimeZone","dispatch","timeZone","state","getTimeZoneData","e","preventDefault","get","then","response","type","data","catch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,kBAA1B,QAAmD,kBAAnD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,QAAQ,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;;AAEA,QAAME,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,KAAK,CACFY,GADH,CACO,gCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEb,kBADC;AAEPc,QAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcT;AAFb,OAAD,CAAR;AAID,KAPH,EAQGU,KARH;AAWD,GAbD;;AAeA,SAAO;AAAER,IAAAA,eAAF;AAAmBF,IAAAA;AAAnB,GAAP;AACD,CArBD;;GAAMF,Q;UACaF,W,EAEAC,W;;;KAHbC,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\nimport {SET_PROFILE_DATA, SET_TIME_ZONE_DATA} from \"../store/actions\";\nimport {useDispatch, useSelector } from \"react-redux\";\n\nconst TimeZone = () => {\n  const dispatch = useDispatch()\n\n  const timeZone = useSelector((state) => state.timeZone)\n\n  const getTimeZoneData = (e) => {\n    e.preventDefault()\n    axios\n      .get('http://localhost:8000/timeZone')\n      .then(response => {\n        dispatch({\n          type: SET_TIME_ZONE_DATA,\n          data: response.data.timeZone,\n        })\n      })\n      .catch(\n\n      )\n  }\n\n  return { getTimeZoneData, timeZone }\n}\n\nexport default TimeZone"]},"metadata":{},"sourceType":"module"}