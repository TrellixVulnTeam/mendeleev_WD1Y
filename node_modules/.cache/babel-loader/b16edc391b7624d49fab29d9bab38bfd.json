{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\mendeleev-practice-project\\\\src\\\\component\\\\form\\\\formYup.js\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport * as yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  username: yup.string().required('Введите имя'),\n  email: yup.string().email().required('Введите почту'),\n  confirmEmail: yup.string().email().required().oneOf([yup.ref(\"email\"), null], \"почты должны совпадать\")\n});\n\nconst FormFormik = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: schema,\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      confirmEmail: \"\"\n    },\n    children: ({\n      handleSubmit,\n      handleChange,\n      values,\n      errors\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SignUpForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"SignInHeading\",\n        children: \"Formik\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: values.username,\n          onChange: handleChange,\n          placeholder: \"\\u0418\\u043C\\u044F\",\n          isInvalid: !!errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: values.email,\n          onChange: handleChange,\n          name: \"email\",\n          isInvalid: !!errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"confirmEmail\",\n          value: values.confirmEmail,\n          onChange: handleChange,\n          placeholder: \"\\u043F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 Email\",\n          isInvalid: !!errors.confirmEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.confirmEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"SignUpButton\",\n          type: \"submit\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormFormik;\nexport default FormFormik;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormFormik\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/component/form/formYup.js"],"names":["React","Button","Form","yup","Formik","schema","object","username","string","required","email","confirmEmail","oneOf","ref","FormFormik","handleSubmit","handleChange","values","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport * as yup from \"yup\";\nimport { Formik } from \"formik\";\n\nconst schema = yup.object({\n  username: yup.string().required('Введите имя'),\n  email: yup\n    .string()\n    .email()\n    .required('Введите почту'),\n  confirmEmail: yup\n    .string()\n    .email()\n    .required()\n    .oneOf([yup.ref(\"email\"), null], \"почты должны совпадать\"),\n});\n\nconst FormFormik = () => {\n  return (\n    <Formik\n      validationSchema={schema}\n      initialValues={{\n        username: \"\",\n        email : \"\",\n        confirmEmail : \"\",\n      }}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        values,\n        errors,\n      }) => (\n        <div className=\"SignUpForm\">\n          <h1 className=\"SignInHeading\">Formik</h1>\n          <form noValidate onSubmit={handleSubmit}>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={values.username}\n                onChange={handleChange}\n                placeholder=\"Имя\"\n                isInvalid={!!errors.username}\n              />\n              <p>\n                {errors.username}\n              </p>\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={values.email}\n                onChange={handleChange}\n                name=\"email\"\n                isInvalid={!!errors.email}\n              />\n              <p>\n                {errors.email}\n              </p>\n              <input\n                type=\"email\"\n                name=\"confirmEmail\"\n                value = {values.confirmEmail}\n                onChange={handleChange}\n                placeholder=\"повторите Email\"\n                isInvalid={!!errors.confirmEmail}\n              />\n              <p>\n                {errors.confirmEmail}\n              </p>\n            <Button variant=\"primary\" className=\"SignUpButton\" type=\"submit\">\n              Отправить\n            </Button>\n          </form>\n        </div>\n      )}\n    </Formik>\n  );\n};\n\nexport default FormFormik;"]},"metadata":{},"sourceType":"module"}