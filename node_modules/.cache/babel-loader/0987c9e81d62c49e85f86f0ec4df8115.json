{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { SET_PROFILE_DATA, SET_LOGIN_DATA } from \"../store/actions\";\nimport axios from \"axios\";\n\nfunction* fetchUser(action) {\n  const getLoginData = () => {\n    axios.get('https://jsonplaceholder.typicode.com/todos/1').then(response => {\n      put({\n        type: SET_LOGIN_DATA,\n        login: response.data\n      });\n      console.log(response);\n    });\n  };\n\n  try {\n    const data = yield call(() => {\n      return axios.get('https://jsonplaceholder.typicode.com/todos/1').then(res => res.json());\n    });\n    yield put({\n      type: SET_LOGIN_DATA,\n      login: data\n    });\n  } catch (e) {\n    yield console.log(\"Нет данных\");\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["C:/Users/admin/Desktop/mendeleev-practice-project/src/saga/saga.js"],"names":["call","put","takeEvery","SET_PROFILE_DATA","SET_LOGIN_DATA","axios","fetchUser","action","getLoginData","get","then","response","type","login","data","console","log","res","json","e","mySaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AAEA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC1B,QAAMC,YAAY,GAAG,MAAM;AACzBH,IAAAA,KAAK,CACFI,GADH,CACO,8CADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBV,MAAAA,GAAG,CAAC;AAAEW,QAAAA,IAAI,EAAER,cAAR;AAAwBS,QAAAA,KAAK,EAAEF,QAAQ,CAACG;AAAxC,OAAD,CAAH;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,KALH;AAMD,GAPD;;AASA,MAAI;AACF,UAAMG,IAAI,GAAG,MAAMd,IAAI,CAAC,MAAM;AAC1B,aACEK,KAAK,CACFI,GADH,CACO,8CADP,EAEGC,IAFH,CAEQO,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFf,CADF;AAKD,KANoB,CAAvB;AAQA,UAAMjB,GAAG,CAAC;AAACW,MAAAA,IAAI,EAAER,cAAP;AAAuBS,MAAAA,KAAK,EAAEC;AAA9B,KAAD,CAAT;AACD,GAVD,CAUE,OAAOK,CAAP,EAAU;AACV,UAAMJ,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACD;AACF;;AAED,UAAUI,MAAV,GAAmB;AACjB,QAAMlB,SAAS,CAACC,gBAAD,EAAmBG,SAAnB,CAAf;AACD;;AAED,eAAec,MAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects'\n\nimport {SET_PROFILE_DATA, SET_LOGIN_DATA} from \"../store/actions\"\nimport axios from \"axios\";\n\nfunction* fetchUser(action) {\n  const getLoginData = () => {\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => {\n        put({ type: SET_LOGIN_DATA, login: response.data })\n        console.log(response)\n      })\n  }\n\n  try {\n    const data = yield call(() => {\n        return (\n          axios\n            .get('https://jsonplaceholder.typicode.com/todos/1')\n            .then(res => res.json())\n        )\n      }\n  )\n    yield put({type: SET_LOGIN_DATA, login: data})\n  } catch (e) {\n    yield console.log(\"Нет данных\")\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(SET_PROFILE_DATA, fetchUser)\n}\n\nexport default mySaga"]},"metadata":{},"sourceType":"module"}